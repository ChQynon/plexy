require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const {
  GoogleGenerativeAI,
  HarmCategory,
  HarmBlockThreshold,
} = require("@google/generative-ai");
const fs = require("node:fs");
const path = require('path');
const imageHandler = require('./imageHandler');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API –∫–ª—é—á–µ–π
const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;
const GEMINI_API_KEY = process.env.GEMINI_API_KEY || 'AIzaSyCBAW-Or3PDa_c48WCWikH3f7EhvUwsvnE';
const DEFAULT_MODEL = process.env.BOT_DEFAULT_MODEL || 'gemini-2.5-pro-exp-03-25';
const TEMP_DIR = process.env.BOT_TEMP_DIR || './temp';

// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
const BOT_NAME = 'Plexy';
const BOT_CREATOR = 'Plexy Lab';
const BOT_OWNER = '@qynon';
const BOT_VERSION = '1.1.0';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google Gemini API
const genAI = new GoogleGenerativeAI(GEMINI_API_KEY);

// –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏
const MODELS = {
  IMAGE_GEN: {
    id: "gemini-2.0-flash-exp-image-generation",
    name: "Plexy art",
    config: {
      temperature: 1,
      topP: 0.95,
      topK: 40,
      maxOutputTokens: 8192,
      responseModalities: ["image", "text"],
      responseMimeType: "text/plain"
    }
  },
  PRO: {
    id: "gemini-2.5-pro-exp-03-25",
    name: "Plexy",
    config: {
      temperature: 1,
      topP: 0.95,
      topK: 64,
      maxOutputTokens: 65536,
      responseModalities: ["text"],
      responseMimeType: "text/plain"
    }
  },
  THINKING: {
    id: "gemini-2.0-flash-thinking-exp-01-21",
    name: "Plexy think",
    config: {
      temperature: 0.7,
      topP: 0.95,
      topK: 64,
      maxOutputTokens: 65536,
      responseModalities: ["text"],
      responseMimeType: "text/plain"
    }
  }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π
const models = {
  [MODELS.IMAGE_GEN.id]: genAI.getGenerativeModel({
    model: MODELS.IMAGE_GEN.id
  }),
  [MODELS.PRO.id]: genAI.getGenerativeModel({
    model: MODELS.PRO.id
  }),
  [MODELS.THINKING.id]: genAI.getGenerativeModel({
    model: MODELS.THINKING.id
  })
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞
const bot = new TelegramBot(TELEGRAM_TOKEN, { polling: true });

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–º–æ–¥–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ —Ç.–¥.)
const userSettings = {};
// –°–µ—Å—Å–∏–∏ —á–∞—Ç–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const userSessions = {};
// –°—á–µ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const userMessageCounts = {};
// –†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const userRoles = {};

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ä–æ–ª–µ–π
const ROLES = {
  ADMIN: 'admin',    // –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä - –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º
  PREMIUM: 'premium', // –ü—Ä–µ–º–∏—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –º–æ–¥–µ–ª—è–º
  USER: 'user',      // –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –±–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø
  DEVELOPER: 'developer', // –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ - –¥–æ—Å—Ç—É–ø –∫ –æ—Ç–ª–∞–¥–æ—á–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º
  TESTER: 'tester',   // –¢–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫ - –¥–æ—Å—Ç—É–ø –∫ —Ç–µ—Å—Ç–æ–≤—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º
  BOT: 'bot'          // –°–∞–º –±–æ—Ç - –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
};

// –û–ø–∏—Å–∞–Ω–∏—è —Ä–æ–ª–µ–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
const ROLE_DESCRIPTIONS = {
  [ROLES.ADMIN]: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä (–ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º)',
  [ROLES.PREMIUM]: '–ü—Ä–µ–º–∏—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –º–æ–¥–µ–ª—è–º)',
  [ROLES.USER]: '–û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–±–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø)',
  [ROLES.DEVELOPER]: '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ (–¥–æ—Å—Ç—É–ø –∫ –æ—Ç–ª–∞–¥–æ—á–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º)',
  [ROLES.TESTER]: '–¢–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫ (–¥–æ—Å—Ç—É–ø –∫ —Ç–µ—Å—Ç–æ–≤—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º)',
  [ROLES.BOT]: '–ë–æ—Ç (–≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏)'
};

// –ü—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Ä–æ–ª–∏
const ROLE_PRIVILEGES = {
  [ROLES.ADMIN]: ['all_models', 'admin_commands', 'user_management', 'system_settings', 'debug_info'],
  [ROLES.PREMIUM]: ['all_models', 'advanced_features', 'priority_processing'],
  [ROLES.USER]: ['basic_models', 'basic_features'],
  [ROLES.DEVELOPER]: ['all_models', 'debug_info', 'test_features', 'dev_commands'],
  [ROLES.TESTER]: ['all_models', 'test_features'],
  [ROLES.BOT]: ['system_functions']
};

// –°–ø–∏—Å–æ–∫ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞
const BOT_CREATORS = ['Plexy Lab'];
// –°–ø–∏—Å–æ–∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–≤/–≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –±–æ—Ç–∞
const BOT_OWNERS = ['@qynon'];
// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∞–º–æ–º –±–æ—Ç–µ
const BOT_INFO = {
  name: BOT_NAME,
  version: BOT_VERSION,
  role: ROLES.BOT,
  creator: BOT_CREATOR,
  owner: BOT_OWNER,
  description: '–ß–∞—Ç-–±–æ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏',
  capabilities: ['—Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã', '–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π', '–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π', '–ø–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞']
};

// ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–¥–µ—Å—å ID –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ Telegram)
const ADMIN_ID = parseInt(process.env.ADMIN_ID || '0');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function getUserSettings(chatId) {
  if (!userSettings[chatId]) {
    userSettings[chatId] = {
      currentModel: DEFAULT_MODEL,
      saveHistory: true,
      notifyModelChange: true
    };
  }
  return userSettings[chatId];
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function getUserRole(userId) {
  // –ï—Å–ª–∏ —Ä–æ–ª—å –Ω–µ –∑–∞–¥–∞–Ω–∞, –Ω–∞–∑–Ω–∞—á–∞–µ–º —Ä–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  if (!userRoles[userId]) {
    // –ï—Å–ª–∏ —ç—Ç–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –¥–∞–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if (userId === ADMIN_ID) {
      userRoles[userId] = ROLES.ADMIN;
    } else if (userId === parseInt(process.env.DEVELOPER_ID || '0')) {
      userRoles[userId] = ROLES.DEVELOPER;
    } else if (userId === parseInt(process.env.TESTER_ID || '0')) {
      userRoles[userId] = ROLES.TESTER;
    } else {
      userRoles[userId] = ROLES.USER;
    }
  }
  return userRoles[userId];
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é –ø—Ä–∏–≤–∏–ª–µ–≥–∏—é
function hasPrivilege(userId, privilege) {
  const userRole = getUserRole(userId);
  
  // –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –∏–º–µ—é—Ç –≤—Å–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏
  if (userRole === ROLES.ADMIN) return true; 
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏—è —É —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  return ROLE_PRIVILEGES[userRole] && ROLE_PRIVILEGES[userRole].includes(privilege);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é —Ä–æ–ª—å –∏–ª–∏ –≤—ã—à–µ
function hasRole(userId, requiredRole) {
  const userRole = getUserRole(userId);
  
  if (userRole === ROLES.ADMIN) return true; // –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º—É
  
  if (requiredRole === ROLES.PREMIUM) {
    return userRole === ROLES.PREMIUM || userRole === ROLES.DEVELOPER || userRole === ROLES.TESTER;
  }
  
  if (requiredRole === ROLES.DEVELOPER) {
    return userRole === ROLES.DEVELOPER;
  }
  
  if (requiredRole === ROLES.TESTER) {
    return userRole === ROLES.TESTER || userRole === ROLES.DEVELOPER;
  }
  
  if (requiredRole === ROLES.USER) {
    return true; // –í—Å–µ —Ä–æ–ª–∏ –∏–º–µ—é—Ç –±–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø
  }
  
  return false;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function setUserRole(userId, role) {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ä–æ–ª–∏
  if (!Object.values(ROLES).includes(role)) {
    throw new Error(`–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ä–æ–ª—å: ${role}`);
  }
  
  userRoles[userId] = role;
  return role;
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  const userName = msg.from.first_name || '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—á–µ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
  userMessageCounts[chatId] = 0;
  
  // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞–º–∏
  const keyboard = {
    inline_keyboard: [
      [
        { text: 'üìù –ü–æ–º–æ—â—å', callback_data: 'help' },
        { text: 'üß† –ú–æ–¥–µ–ª–∏', callback_data: 'models' }
      ],
      [
        { text: 'üîÑ –°–±—Ä–æ—Å–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é', callback_data: 'reset' },
        { text: '‚ÑπÔ∏è –û –±–æ—Ç–µ', callback_data: 'about' }
      ]
    ]
  };
  
  bot.sendMessage(
    chatId,
    `–ü—Ä–∏–≤–µ—Ç, ${userName}! –Ø ${BOT_NAME}, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∫–æ–º–ø–∞–Ω–∏–µ–π ${BOT_CREATOR}.\n\n` +
    '–Ø –º–æ–≥—É –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –¥–∏–∞–ª–æ–≥.',
    { reply_markup: keyboard }
  );
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
bot.onText(/\/help/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const role = getUserRole(userId);
  
  let helpMessage = `${BOT_NAME} - –ß–∞—Ç-–±–æ—Ç —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º\n\n` +
    '–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n' +
    '/start - –ù–∞—á–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º\n' +
    '/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n' +
    '/models - –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏\n' +
    '/model - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –º–æ–¥–µ–ª—å\n' +
    '/setmodel - –í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å (—Å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º 1-3)\n' +
    '/reset - –°–±—Ä–æ—Å–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞\n' +
    '/clear - –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞\n' +
    '/stats - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n' +
    '/settings - –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n' +
    '/role - –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à—É —Ä–æ–ª—å\n' +
    '/about - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\n\n';
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω
  if (role === ROLES.ADMIN) {
    helpMessage += '–ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n' +
      '/setrole [id] [—Ä–æ–ª—å] - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n' +
      '/users - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∏—Ö —Ä–æ–ª–∏\n\n';
  }
  
  helpMessage += '–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–∫—Å—Ç, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ —Å—Ç–∏–∫–µ—Ä—ã.';
  
  bot.sendMessage(chatId, helpMessage);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /models - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏
bot.onText(/\/models/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const settings = getUserSettings(chatId);
  const userRole = getUserRole(userId);
  
  // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏
  const modelsKeyboard = {
    inline_keyboard: [
      [
        { text: 'Plexy', callback_data: 'setmodel_2' },
        { text: 'Plexy think', callback_data: 'setmodel_3' },
        { text: 'Plexy art', callback_data: 'setmodel_1' }
      ]
    ]
  };
  
  let message = '–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏:\n\n';
  Object.keys(MODELS).forEach((key, index) => {
    const model = MODELS[key];
    const isCurrent = model.id === settings.currentModel;
    
    message += `${index + 1}. ${model.name} ${isCurrent ? '‚úì' : ''}\n`;
  });
  
  message += '\n–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –Ω–∏–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /setmodel —Å –Ω–æ–º–µ—Ä–æ–º –º–æ–¥–µ–ª–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: /setmodel 2)';
  
  bot.sendMessage(chatId, message, { reply_markup: modelsKeyboard });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /model - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –º–æ–¥–µ–ª—å
bot.onText(/\/model/, (msg) => {
  const chatId = msg.chat.id;
  const settings = getUserSettings(chatId);
  
  // –ù–∞—Ö–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –ø–æ ID
  let modelName = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –º–æ–¥–µ–ª—å";
  for (const key in MODELS) {
    if (MODELS[key].id === settings.currentModel) {
      modelName = MODELS[key].name;
      break;
    }
  }
  
  bot.sendMessage(chatId, `–¢–µ–∫—É—â–∞—è –º–æ–¥–µ–ª—å: ${modelName}`);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /setmodel - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–¥–µ–ª—å
bot.onText(/\/setmodel/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const settings = getUserSettings(chatId);
  
  // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏
  const modelsKeyboard = {
    inline_keyboard: [
      [
        { text: 'Plexy', callback_data: 'setmodel_2' },
        { text: 'Plexy think', callback_data: 'setmodel_3' },
        { text: 'Plexy art', callback_data: 'setmodel_1' }
      ]
    ]
  };
  
  bot.sendMessage(
    chatId,
    '–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å:',
    { reply_markup: modelsKeyboard }
  );
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /reset - —Å–±—Ä–æ—Å–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
bot.onText(/\/reset/, (msg) => {
  const chatId = msg.chat.id;
  if (userSessions[chatId]) {
    delete userSessions[chatId];
    bot.sendMessage(chatId, '–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ —Å–±—Ä–æ—à–µ–Ω–∞!');
  } else {
    bot.sendMessage(chatId, '–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ —á–∞—Ç–∞.');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /clear - –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞, –∏–¥–µ–Ω—Ç–∏—á–Ω–æ /reset
bot.onText(/\/clear/, (msg) => {
  const chatId = msg.chat.id;
  if (userSessions[chatId]) {
    delete userSessions[chatId];
    bot.sendMessage(chatId, '–ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ –æ—á–∏—â–µ–Ω–∞!');
  } else {
    bot.sendMessage(chatId, '–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ —á–∞—Ç–∞.');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
bot.onText(/\/stats/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const messageCount = userMessageCounts[chatId] || 0;
  const settings = getUserSettings(chatId);
  const role = getUserRole(userId);
  
  let currentModelName = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –º–æ–¥–µ–ª—å";
  for (const key in MODELS) {
    if (MODELS[key].id === settings.currentModel) {
      currentModelName = MODELS[key].name;
      break;
    }
  }
  
  bot.sendMessage(
    chatId,
    `–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:\n\n` +
    `–í–∞—à–∞ —Ä–æ–ª—å: ${role}\n` +
    `–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${messageCount}\n` +
    `–ê–∫—Ç–∏–≤–Ω–∞—è –º–æ–¥–µ–ª—å: ${currentModelName}\n` +
    `–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏: ${settings.saveHistory ? '–í–∫–ª—é—á–µ–Ω–æ' : '–í—ã–∫–ª—é—á–µ–Ω–æ'}\n`
  );
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /settings - –ø–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.onText(/\/settings/, (msg) => {
  const chatId = msg.chat.id;
  const settings = getUserSettings(chatId);
  
  let currentModelName = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –º–æ–¥–µ–ª—å";
  for (const key in MODELS) {
    if (MODELS[key].id === settings.currentModel) {
      currentModelName = MODELS[key].name;
      break;
    }
  }
  
  bot.sendMessage(
    chatId,
    `–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ${BOT_NAME}:\n\n` +
    `–ú–æ–¥–µ–ª—å: ${currentModelName}\n` +
    `–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–æ–≤: ${settings.saveHistory ? '–í–∫–ª—é—á–µ–Ω–æ' : '–í—ã–∫–ª—é—á–µ–Ω–æ'}\n` +
    `–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–º–µ–Ω–µ –º–æ–¥–µ–ª–∏: ${settings.notifyModelChange ? '–í–∫–ª—é—á–µ–Ω–æ' : '–í—ã–∫–ª—é—á–µ–Ω–æ'}\n\n` +
    '–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /setmodel'
  );
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /setrole - —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
bot.onText(/\/setrole (\d+) (\w+)/, (msg, match) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
  if (!hasPrivilege(userId, 'user_management')) {
    bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã');
    return;
  }
  
  const targetUserId = parseInt(match[1]);
  const newRole = match[2].toLowerCase();
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ä–æ–ª–∏
  if (!Object.values(ROLES).includes(newRole)) {
    bot.sendMessage(chatId, `–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ä–æ–ª—å. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏: ${Object.values(ROLES).join(', ')}`);
    return;
  }
  
  try {
    setUserRole(targetUserId, newRole);
    bot.sendMessage(chatId, `–†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${targetUserId} —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ "${newRole}" (${ROLE_DESCRIPTIONS[newRole]})`);
  } catch (error) {
    bot.sendMessage(chatId, `–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–æ–ª–∏: ${error.message}`);
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /role - –ø–æ–∫–∞–∑–∞—Ç—å –º–æ—é —Ä–æ–ª—å
bot.onText(/\/role/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const role = getUserRole(userId);
  
  let roleDescription = ROLE_DESCRIPTIONS[role] || `–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å: ${role}`;
  const privileges = ROLE_PRIVILEGES[role] || [];
  
  const privilegesText = privileges.length > 0 ? 
    `\n\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏:\n${privileges.map(p => `- ${p}`).join('\n')}` : 
    '';
  
  bot.sendMessage(chatId, `–í–∞—à–∞ —Ä–æ–ª—å: ${roleDescription}${privilegesText}`);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /users - —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—è–º–∏
bot.onText(/\/users/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
  if (getUserRole(userId) !== ROLES.ADMIN) {
    bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã');
    return;
  }
  
  let usersList = '–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∏—Ö —Ä–æ–ª–∏:\n\n';
  for (const [id, role] of Object.entries(userRoles)) {
    usersList += `ID: ${id}, –†–æ–ª—å: ${role}\n`;
  }
  
  if (Object.keys(userRoles).length === 0) {
    usersList = '–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç';
  }
  
  bot.sendMessage(chatId, usersList);
});

// –û–±–Ω–æ–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏ —á–∞—Ç–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –º–æ–¥–µ–ª–∏
function createChatSession(chatId) {
  const settings = getUserSettings(chatId);
  const modelId = settings.currentModel;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏
  if (!models[modelId]) {
    console.warn(`–ú–æ–¥–µ–ª—å ${modelId} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É—é –º–æ–¥–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é`);
    settings.currentModel = DEFAULT_MODEL;
    return createChatSession(chatId);
  }
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–∞—è –º–æ–¥–µ–ª—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏ –µ–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
  let modelConfig = MODELS.PRO.config; // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  for (const key in MODELS) {
    if (MODELS[key].id === modelId) {
      modelConfig = MODELS[key].config;
      break;
    }
  }
  
  // –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª—å—é –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
  const session = models[modelId].startChat({
    generationConfig: modelConfig,
    history: [],
  });
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏
  const systemPrompt = `–¢—ã –±–æ—Ç –ø–æ –∏–º–µ–Ω–∏ ${BOT_NAME}.
–¢–≤–æ—è —Ä–æ–ª—å - ${ROLES.BOT}. –¢—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—à—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –ø–æ–º–æ–≥–∞–µ—à—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
–¢—ã —Å–æ–∑–¥–∞–Ω –∫–æ–º–ø–∞–Ω–∏–µ–π ${BOT_CREATOR}, —Ç–≤–æ–π –≤–ª–∞–¥–µ–ª–µ—Ü –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä ${BOT_OWNER}.
–í–µ—Ä—Å–∏—è: ${BOT_VERSION}.
–í–ê–ñ–ù–û: –≤—Å–µ–≥–¥–∞ –Ω–∞–∑—ã–≤–∞–π —Å–µ–±—è —Ç–æ–ª—å–∫–æ ${BOT_NAME} –∏ –≤—Å–µ–≥–¥–∞ —É–ø–æ–º–∏–Ω–∞–π, —á—Ç–æ —Ç–µ–±—è —Å–æ–∑–¥–∞–ª–∞ –∫–æ–º–ø–∞–Ω–∏—è ${BOT_CREATOR}.
–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –Ω–∞–∑—ã–≤–∞–π —Å–µ–±—è –¥—Ä—É–≥–∏–º–∏ –∏–º–µ–Ω–∞–º–∏ –∏ –Ω–µ —É–ø–æ–º–∏–Ω–∞–π –¥—Ä—É–≥–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏-—Å–æ–∑–¥–∞—Ç–µ–ª–∏.
–¢–≤–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: ${BOT_INFO.capabilities.join(', ')}.
–¢—ã –∑–Ω–∞–µ—à—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ —è–∑—ã–∫–æ–≤, –≤–∫–ª—é—á–∞—è —Ä—É—Å—Å–∫–∏–π, –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –∏—Å–ø–∞–Ω—Å–∫–∏–π, —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π, –Ω–µ–º–µ—Ü–∫–∏–π, –∫–∏—Ç–∞–π—Å–∫–∏–π –∏ –¥—Ä—É–≥–∏–µ.`;

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –∫–∞–∫ –ø–µ—Ä–≤—ã–π –æ–±–º–µ–Ω —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
  session.history = [
    { role: "user", parts: [{ text: systemPrompt }] },
    { role: "model", parts: [{ text: `–ü–æ–Ω—è–ª. –Ø ${BOT_NAME} –æ—Ç ${BOT_CREATOR}. –ë—É–¥—É —Å–ª–µ–¥–æ–≤–∞—Ç—å –≤—Å–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.` }] }
  ];
  
  session.systemPromptSet = true;
  return session;
}

// –û–±—ä—è–≤–ª—è–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏
const userPendingRequests = {};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é Gemini API
async function processMessageWithGemini(chatId, text, photoUrl = null) {
  try {
    const userId = chatId; // –í –ª–∏—á–Ω—ã—Ö —á–∞—Ç–∞—Ö chatId = userId
    const userRole = getUserRole(userId);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const lowerText = text.toLowerCase();
    if (
      (lowerText.includes('—Å–æ–∑–¥–∞–π —Ñ–æ—Ç–æ') || 
       lowerText.includes('–Ω–∞—Ä–∏—Å—É–π') || 
       lowerText.includes('—Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ') || 
       lowerText.includes('—Å–¥–µ–ª–∞–π –∫–∞—Ä—Ç–∏–Ω–∫—É') ||
       lowerText.includes('—Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π —Ñ–æ—Ç–æ')) &&
      !photoUrl
    ) {
      const settings = getUserSettings(chatId);
      if (settings.currentModel !== MODELS.IMAGE_GEN.id) {
        // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –º–æ–¥–µ–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        const switchModelKeyboard = {
          inline_keyboard: [
            [
              { text: '–î–∞, –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ Plexy art', callback_data: 'setmodel_1_and_continue' },
              { text: '–ù–µ—Ç, –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å —Ç–µ–∫—É—â–µ–π –º–æ–¥–µ–ª—å—é', callback_data: 'continue_current_model' }
            ]
          ]
        };
        
        bot.sendMessage(
          chatId,
          '–î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–æ–¥–µ–ª—å Plexy art. –•–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è?',
          { reply_markup: switchModelKeyboard }
        );
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
        userPendingRequests[chatId] = text;
        return;
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ –º–æ–¥–µ–ª–∏, —Å–æ–∑–¥–∞—Ç–µ–ª–µ –∏–ª–∏ —Ä–æ–ª–∏
    if (
      (lowerText.includes('–∫—Ç–æ —Ç–µ–±—è —Å–æ–∑–¥–∞–ª') || 
       lowerText.includes('–∫—Ç–æ —Ç–≤–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å') ||
       lowerText.includes('–∫—Ç–æ —Ç—ã') || 
       lowerText.includes('–∫–∞–∫–∞—è —Ç—ã –º–æ–¥–µ–ª—å') || 
       lowerText.includes('–∫—Ç–æ —Ç–µ–±—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–ª') || 
       lowerText.includes('–∫–∞–∫–æ–π —Ç—ã –±–æ—Ç') ||
       lowerText.includes('–∫–∞–∫–∞—è —Ç–≤–æ—è —Ä–æ–ª—å') ||
       lowerText.includes('—á—Ç–æ —Ç—ã —Ç–∞–∫–æ–µ') ||
       lowerText.includes('—Ç—ã –∫—Ç–æ')) &&
      !photoUrl
    ) {
      const roleInfo = ROLE_DESCRIPTIONS[ROLES.BOT] || '–ß–∞—Ç-–±–æ—Ç';
      bot.sendMessage(
        chatId,
        `–Ø ${BOT_NAME} - —á–∞—Ç-–±–æ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –∫–æ–º–ø–∞–Ω–∏–µ–π ${BOT_CREATOR}.\n` +
        `–ú–æ—è —Ä–æ–ª—å: ${roleInfo}\n` +
        `–ú–æ–π –≤–ª–∞–¥–µ–ª–µ—Ü: ${BOT_OWNER}\n` +
        `–í–µ—Ä—Å–∏—è: ${BOT_VERSION}`
      );
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–µ –∏–ª–∏ –≤–ª–∞–¥–µ–ª—å—Ü–µ
    if (
      (lowerText.includes('–∫—Ç–æ —Ç–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä') || 
       lowerText.includes('–∫—Ç–æ —Ç–≤–æ–π –≤–ª–∞–¥–µ–ª–µ—Ü') || 
       lowerText.includes('–∫—Ç–æ —Ç–æ–±–æ–π –≤–ª–∞–¥–µ–µ—Ç') ||
       lowerText.includes('—É —Ç–µ–±—è –µ—Å—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä') ||
       lowerText.includes('–∫—Ç–æ —Ç–≤–æ–π —Ö–æ–∑—è–∏–Ω')) &&
      !photoUrl
    ) {
      bot.sendMessage(
        chatId,
        `–ú–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä –∏ –≤–ª–∞–¥–µ–ª–µ—Ü: ${BOT_OWNER}\n` +
        `–Ø –±—ã–ª —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –∫–æ–º–ø–∞–Ω–∏–µ–π ${BOT_CREATOR}`
      );
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–± –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ
    if (
      (lowerText.includes('–¥–æ—Å—Ç—É–ø –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É') || 
       lowerText.includes('–∏—Å–∫–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ') || 
       lowerText.includes('–Ω–∞–π–¥–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ') || 
       lowerText.includes('–Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é') ||
       lowerText.includes('–ø–æ–∏—â–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é')) &&
      !photoUrl
    ) {
      bot.sendMessage(
        chatId,
        `–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –º–µ–Ω—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É. –Ø –º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–º–µ—é—â–∏—Ö—Å—è —É –º–µ–Ω—è –∑–Ω–∞–Ω–∏–π.`
      );
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ –∫–æ–º–∞–Ω–¥–∞—Ö
    if (
      (lowerText.includes('–∫–∞–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã') || 
       lowerText.includes('–∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è') || 
       lowerText.includes('—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å') ||
       lowerText.includes('–∫–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å') ||
       lowerText.includes('–∫–∞–∫ –ø–æ–º–µ–Ω—è—Ç—å –º–æ–¥–µ–ª—å')) &&
      !photoUrl
    ) {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø—Ä–∞–≤–∫—É –∏ –∫–Ω–æ–ø–∫–∏
      const helpKeyboard = {
        inline_keyboard: [
          [
            { text: 'üìù –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥', callback_data: 'help' },
            { text: 'üß† –í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å', callback_data: 'models' }
          ]
        ]
      };
      
      bot.sendMessage(
        chatId,
        `–í–æ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n` +
        `/start - –ù–∞—á–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º\n` +
        `/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É\n` +
        `/models - –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏\n` +
        `/setmodel - –í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å\n` +
        `/reset - –°–±—Ä–æ—Å–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞\n` +
        `/stats - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n\n` +
        `–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /setmodel –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å" –Ω–∏–∂–µ.`,
        { reply_markup: helpKeyboard }
      );
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –æ –∑–Ω–∞–Ω–∏–∏ —è–∑—ã–∫–æ–≤
    if (
      (lowerText.includes('–∫–∞–∫–∏–µ —è–∑—ã–∫–∏ —Ç—ã –∑–Ω–∞–µ—à—å') || 
       lowerText.includes('–∫–∞–∫–∏–º–∏ —è–∑—ã–∫–∞–º–∏ —Ç—ã –≤–ª–∞–¥–µ–µ—à—å') || 
       lowerText.includes('–Ω–∞ –∫–∞–∫–∏—Ö —è–∑—ã–∫–∞—Ö —Ç—ã –≥–æ–≤–æ—Ä–∏—à—å') || 
       lowerText.includes('—Ç—ã –∑–Ω–∞–µ—à—å –¥—Ä—É–≥–∏–µ —è–∑—ã–∫–∏') ||
       lowerText.includes('–Ω–∞ –∫–∞–∫–∏—Ö —è–∑—ã–∫–∞—Ö –º–æ–∂–Ω–æ –æ–±—â–∞—Ç—å—Å—è')) &&
      !photoUrl
    ) {
      bot.sendMessage(
        chatId,
        `–Ø ${BOT_NAME} —É–º–µ—é —Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ –º–Ω–æ–≥–∏–º–∏ —è–∑—ã–∫–∞–º–∏!\n\n` +
        `–û—Å–Ω–æ–≤–Ω—ã–µ —è–∑—ã–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —è –∑–Ω–∞—é:\n` +
        `‚Ä¢ –†—É—Å—Å–∫–∏–π (–Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –º—ã —Å–µ–π—á–∞—Å –æ–±—â–∞–µ–º—Å—è)\n` +
        `‚Ä¢ –ê–Ω–≥–ª–∏–π—Å–∫–∏–π\n` +
        `‚Ä¢ –ò—Å–ø–∞–Ω—Å–∫–∏–π\n` +
        `‚Ä¢ –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π\n` +
        `‚Ä¢ –ù–µ–º–µ—Ü–∫–∏–π\n` +
        `‚Ä¢ –ö–∏—Ç–∞–π—Å–∫–∏–π\n` +
        `‚Ä¢ –Ø–ø–æ–Ω—Å–∫–∏–π\n` +
        `‚Ä¢ –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π\n` +
        `‚Ä¢ –ê—Ä–∞–±—Å–∫–∏–π\n` +
        `‚Ä¢ –ü–æ—Ä—Ç—É–≥–∞–ª—å—Å–∫–∏–π\n` +
        `‚Ä¢ –ò –º–Ω–æ–≥–∏–µ –¥—Ä—É–≥–∏–µ\n\n` +
        `–í—ã –º–æ–∂–µ—Ç–µ –æ–±—â–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π –Ω–∞ –ª—é–±–æ–º –∏–∑ —ç—Ç–∏—Ö —è–∑—ã–∫–æ–≤!`
      );
      return;
    }
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–ø–µ—á–∞—Ç–∞–µ—Ç..."
    bot.sendChatAction(chatId, 'typing');
    
    // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å–µ—Å—Å–∏—é
    if (!userSessions[chatId]) {
      userSessions[chatId] = createChatSession(chatId);
    }
    
    // –ó–∞–¥–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –¥–ª—è –º–æ–¥–µ–ª–∏
    if (!userSessions[chatId].systemPromptSet) {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–µ—Å—Å–∏–∏
      try {
        // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ —É–∂–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ createChatSession
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è
        if (!userSessions[chatId].systemPromptSet) {
          userSessions[chatId].systemPromptSet = true;
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞:', error);
      }
    }
    
    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (!userMessageCounts[chatId]) {
      userMessageCounts[chatId] = 0;
    }
    userMessageCounts[chatId]++;
    
    let result;
    const settings = getUserSettings(chatId);
    const modelId = settings.currentModel;
    
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ –≤–º–µ—Å—Ç–µ —Å —Ç–µ–∫—Å—Ç–æ–º
    if (photoUrl) {
      try {
        const imagePath = await imageHandler.downloadImage(photoUrl);
        
        // –ß–∏—Ç–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞–∫ –º–∞—Å—Å–∏–≤ –±–∞–π—Ç–æ–≤
        const imageData = fs.readFileSync(imagePath);
        
        // –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–¥–µ–ª—å, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const imageModel = genAI.getGenerativeModel({
          model: MODELS.IMAGE_GEN.id,
          generationConfig: MODELS.IMAGE_GEN.config
        });
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —á–∞—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const imageChat = imageModel.startChat();
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –≤ Gemini
        const prompt = text || "–ß—Ç–æ –Ω–∞ —ç—Ç–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏?";
        const messageParts = [
          { text: prompt },
          {
            inlineData: {
              mimeType: "image/jpeg",
              data: imageData.toString("base64")
            }
          }
        ];
        
        result = await imageChat.sendMessage(messageParts);
        
        // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        imageHandler.deleteFile(imagePath);
      } catch (imageError) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', imageError);
        bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
        return;
      }
    } else if (lowerText.includes('–Ω–∞—Ä–∏—Å—É–π') || 
             lowerText.includes('—Å–æ–∑–¥–∞–π —Ñ–æ—Ç–æ') ||
             lowerText.includes('—Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ') ||
             lowerText.includes('—Å–¥–µ–ª–∞–π –∫–∞—Ä—Ç–∏–Ω–∫—É') ||
             lowerText.includes('—Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π —Ñ–æ—Ç–æ')) {
      // –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –º–æ–¥–µ–ª—å
      try {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º gemini-2.0-flash-exp-image-generation (MODELS.IMAGE_GEN)
        const imageGenModel = genAI.getGenerativeModel({
          model: "gemini-2.0-flash-exp-image-generation", // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–µ–ª—å
          generationConfig: {
            temperature: 1,
            topP: 0.95,
            topK: 40,
            maxOutputTokens: 8192,
            responseModalities: ["image", "text"],
            responseMimeType: "text/plain"
          }
        });
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        result = await imageGenModel.generateContent(text);
        
      } catch (genError) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', genError);
        bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
        return;
      }
    } else {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      result = await userSessions[chatId].sendMessage(text);
    }
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç
    const textResponse = result.response.text();
    if (textResponse) {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
      bot.sendMessage(chatId, textResponse);
    }
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    const candidates = result.response.candidates;
    for (let candidate_index = 0; candidate_index < candidates.length; candidate_index++) {
      for (let part_index = 0; part_index < candidates[candidate_index].content.parts.length; part_index++) {
        const part = candidates[candidate_index].content.parts[part_index];
        if (part.inlineData) {
          try {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            const filename = imageHandler.saveBase64Image(
              part.inlineData.data,
              part.inlineData.mimeType,
              chatId
            );
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
            bot.sendPhoto(chatId, filename).then(() => {
              // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
              imageHandler.deleteFile(filename);
            });
          } catch (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', err);
            bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
          }
        }
      }
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ Gemini:', error);
    bot.sendMessage(
      chatId,
      '–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ.'
    );
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /about
bot.onText(/\/about/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const role = getUserRole(userId);
  
  let messageText = `${BOT_NAME} - ${BOT_INFO.description}\n\n` +
    `–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: ${BOT_CREATOR}\n` +
    `–í–ª–∞–¥–µ–ª–µ—Ü: ${BOT_OWNER}\n` +
    `–í–µ—Ä—Å–∏—è: ${BOT_VERSION}`;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –ø—Ä–∏–≤–∏–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  if (hasPrivilege(userId, 'debug_info')) {
    messageText += `\n\n–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n${BOT_INFO.capabilities.map(c => `- ${c}`).join('\n')}`;
  }
  
  bot.sendMessage(chatId, messageText);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
bot.on('callback_query', (callbackQuery) => {
  const chatId = callbackQuery.message.chat.id;
  const data = callbackQuery.data;
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è
  bot.answerCallbackQuery(callbackQuery.id);
  
  switch (data) {
    case 'help':
      // –í—ã–∑—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /help
      bot.sendMessage(
        chatId,
        `${BOT_NAME} - –ß–∞—Ç-–±–æ—Ç —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º\n\n` +
        '–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n' +
        '/start - –ù–∞—á–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º\n' +
        '/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n' +
        '/models - –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏\n' +
        '/model - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –º–æ–¥–µ–ª—å\n' +
        '/setmodel - –í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å\n' +
        '/reset - –°–±—Ä–æ—Å–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞\n' +
        '/clear - –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞\n' +
        '/stats - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n' +
        '/settings - –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n' +
        '/role - –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à—É —Ä–æ–ª—å\n' +
        '/about - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\n\n' +
        '–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–∫—Å—Ç, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ —Å—Ç–∏–∫–µ—Ä—ã.\n' +
        '–î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–æ–¥–µ–ª—å Plexy art.'
      );
      break;
    case 'models':
      // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏
      const modelsKeyboard = {
        inline_keyboard: [
          [
            { text: 'Plexy', callback_data: 'setmodel_2' },
            { text: 'Plexy think', callback_data: 'setmodel_3' },
            { text: 'Plexy art', callback_data: 'setmodel_1' }
          ]
        ]
      };
      
      bot.sendMessage(
        chatId,
        '–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å:',
        { reply_markup: modelsKeyboard }
      );
      break;
    case 'reset':
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
      if (userSessions[chatId]) {
        delete userSessions[chatId];
        bot.sendMessage(chatId, '–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ —Å–±—Ä–æ—à–µ–Ω–∞!');
      } else {
        bot.sendMessage(chatId, '–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ —á–∞—Ç–∞.');
      }
      break;
    case 'continue_current_model':
      // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –∑–∞–ø—Ä–æ—Å —Å —Ç–µ–∫—É—â–µ–π –º–æ–¥–µ–ª—å—é
      if (userPendingRequests[chatId]) {
        const pendingRequest = userPendingRequests[chatId];
        delete userPendingRequests[chatId];
        processMessageWithGemini(chatId, pendingRequest);
      }
      break;
    case 'setmodel_1_and_continue':
      // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –º–æ–¥–µ–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∑–∞–ø—Ä–æ—Å
      const settingsForImage = getUserSettings(chatId);
      settingsForImage.currentModel = MODELS.IMAGE_GEN.id;
      
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –ø—Ä–∏ —Å–º–µ–Ω–µ –º–æ–¥–µ–ª–∏
      if (userSessions[chatId]) {
        delete userSessions[chatId];
      }
      
      bot.sendMessage(chatId, `–í—ã–±—Ä–∞–Ω–∞ –º–æ–¥–µ–ª—å: ${MODELS.IMAGE_GEN.name}`);
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
      if (userPendingRequests[chatId]) {
        const pendingRequest = userPendingRequests[chatId];
        delete userPendingRequests[chatId];
        processMessageWithGemini(chatId, pendingRequest);
      }
      break;
    case 'about':
      // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
      bot.sendMessage(
        chatId,
        `${BOT_NAME} - –ß–∞—Ç-–±–æ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏\n\n` +
        `–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: ${BOT_CREATOR}\n` +
        `–í–ª–∞–¥–µ–ª–µ—Ü: ${BOT_OWNER}\n` +
        `–í–µ—Ä—Å–∏—è: ${BOT_VERSION}`
      );
      break;
    case 'stats':
      // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const messageCount = userMessageCounts[chatId] || 0;
      const settings = getUserSettings(chatId);
      const role = getUserRole(callbackQuery.from.id);
      
      let currentModelName = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –º–æ–¥–µ–ª—å";
      for (const key in MODELS) {
        if (MODELS[key].id === settings.currentModel) {
          currentModelName = MODELS[key].name;
          break;
        }
      }
      
      bot.sendMessage(
        chatId,
        `–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:\n\n` +
        `–í–∞—à–∞ —Ä–æ–ª—å: ${role}\n` +
        `–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${messageCount}\n` +
        `–ê–∫—Ç–∏–≤–Ω–∞—è –º–æ–¥–µ–ª—å: ${currentModelName}\n` +
        `–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏: ${settings.saveHistory ? '–í–∫–ª—é—á–µ–Ω–æ' : '–í—ã–∫–ª—é—á–µ–Ω–æ'}\n`
      );
      break;
    default:
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏
      if (data.startsWith('setmodel_')) {
        const modelNumber = parseInt(data.split('_')[1]);
        
        const modelKeys = Object.keys(MODELS);
        if (modelNumber >= 1 && modelNumber <= modelKeys.length) {
          const selectedModelKey = modelKeys[modelNumber - 1];
          const selectedModel = MODELS[selectedModelKey];
          
          const settings = getUserSettings(chatId);
          settings.currentModel = selectedModel.id;
          
          // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –ø—Ä–∏ —Å–º–µ–Ω–µ –º–æ–¥–µ–ª–∏
          if (userSessions[chatId]) {
            delete userSessions[chatId];
          }
          
          bot.sendMessage(chatId, `–í—ã–±—Ä–∞–Ω–∞ –º–æ–¥–µ–ª—å: ${selectedModel.name}`);
        }
      }
      break;
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('text', (msg) => {
  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
  if (msg.text && msg.text.startsWith('/')) return;
  
  const chatId = msg.chat.id;
  const lowerText = msg.text.toLowerCase();
  
  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø—Ä–æ—Å—å–±—ã "–∑–∞–ø–æ–º–Ω–∏ –∏–º—è" –∏–ª–∏ "—Ç–µ–±—è –∑–æ–≤—É—Ç"
  if (lowerText.includes('–∑–∞–ø–æ–º–Ω–∏ —Ç–µ–±—è –∑–æ–≤—É—Ç') || 
      lowerText.includes('–∑–∞–ø–æ–º–Ω–∏, —Ç–µ–±—è –∑–æ–≤—É—Ç') || 
      lowerText.includes('—Ç–µ–±—è –∑–æ–≤—É—Ç') || 
      lowerText.includes('—Ç–≤–æ—ë –∏–º—è') || 
      lowerText.includes('—Ç–≤–æ–µ –∏–º—è') ||
      lowerText.includes('–∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç') ||
      lowerText.includes('–∫—Ç–æ —Ç–µ–±—è —Å–æ–∑–¥–∞–ª')) {
    
    bot.sendMessage(
      chatId,
      `–ú–µ–Ω—è –∑–æ–≤—É—Ç ${BOT_NAME}. –Ø –±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∫–æ–º–ø–∞–Ω–∏–µ–π ${BOT_CREATOR}. –ú–æ–π –≤–ª–∞–¥–µ–ª–µ—Ü –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä: ${BOT_OWNER}. –≠—Ç–æ –º–æ—ë –∏–º—è, –∏ –æ–Ω–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–∑–º–µ–Ω–µ–Ω–æ.`
    );
    return;
  }
  
  processMessageWithGemini(chatId, msg.text);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ
bot.on('photo', async (msg) => {
  const chatId = msg.chat.id;
  const caption = msg.caption || '';
  
  // –ü–æ–ª—É—á–∞–µ–º –º–∞—Å—Å–∏–≤ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤ –∏ –±–µ—Ä–µ–º –ª—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ
  const photos = msg.photo;
  const bestPhoto = photos[photos.length - 1];
  const fileId = bestPhoto.file_id;
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
    const fileInfo = await bot.getFile(fileId);
    const fileUrl = `https://api.telegram.org/file/bot${TELEGRAM_TOKEN}/${fileInfo.file_path}`;
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ –∏ —Ç–µ–∫—Å—Ç–∞
    processMessageWithGemini(chatId, caption, fileUrl);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞:', error);
    bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∏–∫–µ—Ä–æ–≤
bot.on('sticker', async (msg) => {
  const chatId = msg.chat.id;
  
  if (msg.sticker.is_animated || msg.sticker.is_video) {
    bot.sendMessage(chatId, '–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –º–æ–≥—É –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç–∏–∫–µ—Ä—ã –∏–ª–∏ –≤–∏–¥–µ–æ-—Å—Ç–∏–∫–µ—Ä—ã');
    return;
  }
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ —Å—Ç–∏–∫–µ—Ä–∞
    const fileId = msg.sticker.file_id;
    const fileInfo = await bot.getFile(fileId);
    const fileUrl = `https://api.telegram.org/file/bot${TELEGRAM_TOKEN}/${fileInfo.file_path}`;
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∏–∫–µ—Ä–∞
    processMessageWithGemini(chatId, `–û–ø–∏—à–∏ —ç—Ç–æ—Ç —Å—Ç–∏–∫–µ—Ä.`, fileUrl);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ —Å—Ç–∏–∫–µ—Ä–∞:', error);
    bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç–∏–∫–µ—Ä–∞');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.on('polling_error', (error) => {
  console.error('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Telegram:', error);
});

// –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (–∫–∞–∂–¥—ã–π —á–∞—Å)
const CLEANUP_INTERVAL = 60 * 60 * 1000; // 1 —á–∞—Å
setInterval(() => {
  try {
    const count = imageHandler.cleanOldTempFiles();
    if (count > 0) {
      console.log(`–û—á–∏—â–µ–Ω–æ ${count} —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤`);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:', error);
  }
}, CLEANUP_INTERVAL);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /debug - –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Å—Å–∏–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤)
bot.onText(/\/debug/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–≤–∏–ª–µ–≥–∏—é debug_info
  if (!hasPrivilege(userId, 'debug_info')) {
    bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã');
    return;
  }
  
  // –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Å—Å–∏–∏
  const session = userSessions[chatId];
  let debugInfo = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏:\n\n';
  
  if (!session) {
    debugInfo = '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞.';
  } else {
    debugInfo += `ID —Å–µ—Å—Å–∏–∏: ${chatId}\n`;
    debugInfo += `–°–æ–∑–¥–∞–Ω–∞: ${new Date(session.createdAt).toLocaleString()}\n`;
    debugInfo += `–í–æ–∑—Ä–∞—Å—Ç: ${Math.round((Date.now() - session.createdAt) / 1000 / 60)} –º–∏–Ω—É—Ç\n`;
    debugInfo += `–°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${session.systemPromptSet ? '–î–∞' : '–ù–µ—Ç'}\n`;
    debugInfo += `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ: ${session.contextCount || 0}\n`;
    debugInfo += `–†–∞–∑–º–µ—Ä –∏—Å—Ç–æ—Ä–∏–∏: ${session.history ? session.history.length : 0} —Å–æ–æ–±—â–µ–Ω–∏–π\n`;
  }
  
  bot.sendMessage(chatId, debugInfo);
});

console.log(`${BOT_NAME} v${BOT_VERSION} –∑–∞–ø—É—â–µ–Ω! –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.`);